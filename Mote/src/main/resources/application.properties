
# Datasource settings
#db.url=jdbc:mysql://ec2mysqlinstance.cht1ypsricjf.us-west-2.rds.amazonaws.com:3306/motedb
db.url=jdbc:mysql://motedb.cez7h4lyy2n3.us-west-2.rds.amazonaws.com:3306/motedb
#db.url=jdbc:mysql://localhost:3306/motedb
#db.username=mtadmin
#db.password=mtadmin
db.username=moteadmin
db.password=moteadmin
db.driver=com.mysql.jdbc.Driver

# Hibernate settings
hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
hibernate.show_sql=true
hibernate.hbm2ddl.auto=update
#hibernate.naming_strategy=ImprovedNamingStrategy
entitymanager.packagesToScan=com.mt.*

security.user.name=user
security.user.password=user
security.user.role=USER
security.require-ssl=false

#secret=secret

# Mail Server Configuration
mail.protocol=smtp
mail.host=email-smtp.us-west-2.amazonaws.com
mail.port=25
mail.smtp.auth=false
mail.smtp.starttls.enable=true
mail.from=aws-ses-smtp-cl-user@email-smtp.us-west-2.amazonaws.com 
mail.username=AKIAI5TPAZZMSH4HICRQ 
mail.password=AjsFz5pyw8wkUkPe58xYChMYUWOVAMeknUdhBrtUQUC/

#Logging
logging.file: mt_log.log
logging.level.org.springframework.web: INFO
logging.level.org.hibernate: INFO
logging.level.com.mt: INFO


# Disable caching - during development if a page is changed, the
# changes can be seen next time it is rendered. Should be 'true' in
# production for efficiency.
spring.thymeleaf.cache=false

# Spring boot assumes the fallback error page maps to /error. Set this
# property to specify an alternative mapping. If using a
# SimpleMappingExceptionResolver, make sure it's defaultErrorView
# corresponds to the same page (see ErrorMvcAutoConfiguration).
error.path=/error

# Set to false to turn-off Spring Boot's error page. Unhandled
# exceptions will be handled by container in the usual way.
#error.whitelabel.enabled=false
server.error.whitelabel.enabled=false

# Enable internal logging for Spring MVC
org.springframework.web=DEBUG



# ============= #
# Spring Social #
# ============= #

#spring-social-facebook
#The presence of these properties and Spring Social Facebook in the classpath will trigger automatic configuration of Spring
#Social's ConnectController.java, FacebookConnectionFactory.java, and other components of Spring Social's connection framework.
#Although much of what ConnectController does involves redirecting to Facebook and handling a redirect from Facebook, it also
#shows connection status when a GET request to /connect is made.  ConnectController does not define its own connection views.
#spring.social.facebook.appId=956170854392949
#spring.social.facebook.appSecret=5724c20e501b3d770370f04fecffbb2c
spring.social.facebook.appId=1105685566108143
spring.social.facebook.appSecret=0b4b69914152837f9978611d84629e66


#spring-social-instagram
#Not completed and available on spring
#spring.social.instagram.appId=6021c8dc05274d76945de71ef4baae32
#spring.social.instagram.appSecret=2f6ea92b6e38414d87d815b1569e90cd


#spring-social-twitter
#Twitter: https://apps.twitter.com/
#The presence of these properties and Spring Social Twitter in the classpath will trigger automatic configuration of Spring
#Social's ConnectController.java, TwitterConnectionFactory.java, and other components of Spring Social's connection framework.
#Although much of what ConnectController does involves redirecting to Twitter and handling a redirect from Twitter, it also
#shows connection status when a GET request to /connect is made.  ConnectController does not define its own connection views.
spring.social.twitter.appId=c3b3hIjWu5rjcYSFBuo5zIx5N
spring.social.twitter.appSecret=itMlCeah7ho3ItrJBp2LZrwlCyHLAcFU5b6WywzYsqJYvjA8hG


#spring-social-linkedin
spring.social.linkedin.appId=779i19xl522y6u
spring.social.linkedin.appSecret=etXhLPMuyTLjYZep

